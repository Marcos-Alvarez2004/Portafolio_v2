---
interface Props {
	title: string;
}

const { title } = Astro.props;

// FONT OPEN-SANS weights 300-800
import '@fontsource-variable/open-sans/wdth.css';
// FONT NOTO-SERIF-ORIYA
import '@fontsource-variable/noto-serif-oriya';
// BACKGROUND
import Background from '@/components/background/Background.astro';
---

<!doctype html>
<html lang="es" data-theme="dark">
	<head>
		<!-- METADATOS -->
		<meta charset="UTF-8" />
		<meta name="autor" content="Marcos Alvarez Medero">
		<meta name="descripcion" content="Portafolio linkdIn: " />
		<meta name="viewport" content="width=device-width" />
		<!-- BOXICON -->
		<link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
		<!-- FAVICON -->
		<link rel="icon" type="image/svg+xml" href="/favicon.png" />
		<!-- TITLE -->
		<title>{title}</title>
	</head>
	<body>
		<Background />
		<div class="cursor"></div>
		<slot />
	</body>
	</html>
<!-- GLOBAL STYLE -->
<style is:global>
	:root {
		--color-primary: #bc6ff1;
		--color-general: #f5f5f5;
		--color-btn-text: #111111;
		--color-gray: #666666;
		--bg-primary: #191919;
		--bg-gray: #131313;
		--border-primary: 1px solid var(--color-primary);
		--border-secondary: 1px solid #333333;
		--bg-btn-theme-mode: #252526;
		--background-opacity: rgba(137, 44, 220, .7);
		--background-hover-btn: #bc6ff1;
		--color-hover-btn: #111111;
		transition: var(--bg-primary) .2s, var(--color-primary) .2s;
	}

	:root[data-theme="light"] {
		--color-primary: #892cdc;
		--color-general: #111111;
		--color-btn-text: #f5f5f5;
		--color-gray: #999999;
		--bg-primary: #f5f5f5;
		--bg-gray: #cfcfcf;
		--border-primary: 1px solid var(--color-primary);
		--border-secondary: 1px solid #999999;
		--bg-btn-theme-mode: #e5e5e5;
		--background-opacity: rgba(188, 111, 241, .7);
		--background-hover-btn: #892cdc;
		--color-hover-btn: #f5f5f5;
		transition: var(--bg-primary) .2s, var(--color-primary) .2s;
	}
	
	:root[data-theme="light"] .dark-mode {
		display: none;
	} 

	:root[data-theme="dark"] .light-mode {
		display: none;
	}
	
	.border-general {
		border: .1rem solid var(--color-primary);
	} 
	
	html {
		font-family: 'Open Sans Variable', sans-serif;
		background: var(--bg-primary);
		color: var(--color-general);
		overflow-y: auto;
		overflow-x: hidden;
		transition: background .2s ease, color .2s ease;
	}

	 h1, .logo {
		color: var(--color-primary);
		transition: color .2s ease;
	}

	button, .btn {
		color: var(--color-general);
		background-color: var(--color-primary);
		font-weight: 700;
		transition: background .2s ease, color .2s ease;
	}

	.btn {
		color: var(--color-btn-text);
	}

	.cursor {
		width: 0rem;
		height: 0rem;
		border-width: 0.438rem;
		border-style: solid;
		border-color: var(--color-primary);
		background: transparent;
		border-radius: 50%;
		transition: height 0.2s, width 0.2s, border-color 0.2s, border-width 0.2s;

		position: fixed;
		top: 0;
		left: 0;
		transform: translate(-50%, -50%);
		border-radius: 50%;
		z-index: 999;
		pointer-events: none;
	}

	.cursorHover {
		width: 1.75rem;
		height: 1.75rem;
		border-width: 0.313rem;
		border-color: var(--color-general);
		opacity: .8;
	}

	section {
		position: relative;
		display: flex;
		flex-direction: column;
		justify-content:  center;
		align-items: center;
	} 

	img {
    background: var(--color-gray);
  }
	
  img[alt] {
    text-align: center;
    line-height: 7.5rem;
  }
	
	.padd {
		padding: 4rem 0;
	}

	@media (pointer: coarse) {
		.cursor {
			display: none;
		}
	}

	@media (width >= 64rem) {
		.padd {
			padding: 0 0 8rem 0;
		}

		section {
			display: flex;
			align-items: normal;
		}
	}
	
	@media (prefers-reduced-motion: reduce) {
		#bgStars {
			display: none;
		}

		.cursor {
			display: none;
		}
	}
</style>

<script defer>
// VARIABLES THEME CHANGES
const darkBtnMode = document.querySelectorAll(".dark-mode");
const lightBtnMode = document.querySelectorAll(".light-mode");
			
darkBtnMode.forEach((e) => {
  e.addEventListener("click", setLightMode)
})

lightBtnMode.forEach((e) => {
  e.addEventListener("click", setDarkMode)
})
		
function setDarkMode() {
	setUserTheme("dark");
}
		
function setLightMode() {
	setUserTheme("light")
}
		
// LOCALSTORAGE THEME
const userTheme = localStorage.getItem("theme")
const lightQuery = window.matchMedia("(prefers-color-theme): light")
    
if (userTheme === "light" || (!userTheme && lightQuery.matches)) {
  setTheme("light")
}
    
lightQuery.addEventListener("change", function (e) {
  if (!localStorage.getItem("theme"))
  setTheme(e.matches ? "light" : "dark")
  }
)
    
function setTheme(newTheme) {
  document.documentElement.setAttribute("data-theme", newTheme)
}
    
function setUserTheme(newTheme) {
  document.documentElement.setAttribute("data-theme", newTheme)
  localStorage.setItem("theme", newTheme)
}

// DOM ELEMENTS
const cursor = document.querySelector(".cursor");
const buttons = document.querySelectorAll("button");
const a = document.querySelectorAll("a");
// ARRAY
const cursorHover = [...buttons, ...a];
// CURSOR DETECTION
window.addEventListener("mousemove", function (e) {
	const posX = e.clientX;
	const posY = e.clientY;

	cursor?.animate(
		{
			left: `${posX}px`,
			top: `${posY}px`,
		},
		{ duration: 500, fill: "forwards" }
	);
});
// HOVER CURSOR
cursorHover.forEach((e) => {
	e.addEventListener("mouseover", () => {
		cursor.classList.add("cursorHover");
	})

	e.addEventListener("mouseout", () => {
		cursor.classList.remove("cursorHover");
	})
});
</script>
